<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software engineering on Temporary heresy</title><link>https://blog.nukemberg.com/tags/software-engineering/</link><description>Recent content in Software engineering on Temporary heresy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Aug 2020 09:43:38 +0300</lastBuildDate><atom:link href="https://blog.nukemberg.com/tags/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>The Design of Design</title><link>https://blog.nukemberg.com/book/design-of-design/</link><pubDate>Wed, 12 Aug 2020 09:43:38 +0300</pubDate><guid>https://blog.nukemberg.com/book/design-of-design/</guid><description/></item><item><title>Can I tell you a secret? I see dead systems</title><link>https://blog.nukemberg.com/presentation/i-see-dead-systems/</link><pubDate>Sat, 01 Sep 2018 17:08:38 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/i-see-dead-systems/</guid><description/></item><item><title>Total Cloud Immersion</title><link>https://blog.nukemberg.com/presentation/total-cloud-immersion/</link><pubDate>Wed, 06 Jun 2018 23:51:45 +0300</pubDate><guid>https://blog.nukemberg.com/presentation/total-cloud-immersion/</guid><description/></item><item><title>The Missing User Stories</title><link>https://blog.nukemberg.com/presentation/the-missing-user-stories/</link><pubDate>Wed, 06 Jun 2018 22:42:43 +0300</pubDate><guid>https://blog.nukemberg.com/presentation/the-missing-user-stories/</guid><description/></item><item><title>Data: You keep using that word...</title><link>https://blog.nukemberg.com/presentation/data-you-keep-using-that-word/</link><pubDate>Wed, 29 Nov 2017 23:59:42 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/data-you-keep-using-that-word/</guid><description/></item><item><title>Actionable Exceptions</title><link>https://blog.nukemberg.com/presentation/actionable-exceptions/</link><pubDate>Wed, 01 Nov 2017 18:32:25 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/actionable-exceptions/</guid><description/></item><item><title>Resilient Design 101</title><link>https://blog.nukemberg.com/presentation/resilient-design-101/</link><pubDate>Wed, 01 Nov 2017 18:12:42 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/resilient-design-101/</guid><description/></item><item><title>The Future of O/S</title><link>https://blog.nukemberg.com/presentation/the-future-of-os/</link><pubDate>Fri, 21 Oct 2016 09:18:54 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/the-future-of-os/</guid><description/></item><item><title>Finding a needle in a haystack - JVM logging guide</title><link>https://blog.nukemberg.com/presentation/jvm-logging-guide/</link><pubDate>Fri, 21 Oct 2016 09:11:33 +0200</pubDate><guid>https://blog.nukemberg.com/presentation/jvm-logging-guide/</guid><description/></item><item><title>The Mythical Man-Month: Essays On Software Engineering</title><link>https://blog.nukemberg.com/book/the-mythical-man-month/</link><pubDate>Wed, 22 Jun 2016 15:10:50 +0800</pubDate><guid>https://blog.nukemberg.com/book/the-mythical-man-month/</guid><description/></item><item><title>Why a private cloud is an exercise in futility</title><link>https://blog.nukemberg.com/post/why-a-private-cloud-is-an-exercise-in-futility/</link><pubDate>Fri, 25 Mar 2016 07:51:09 +1100</pubDate><guid>https://blog.nukemberg.com/post/why-a-private-cloud-is-an-exercise-in-futility/</guid><description>&lt;p>Every corporation and enterprise want a private cloud these days. The arguments vary from company to company, usually revolving around security, cost, independence and strangely enough — reliability. I could argue that given the track record of most enterprise IT departments it seems dubious they can improve even one of these parameters compared to a public cloud, but I won’t. It turns out there’s no point refuting those arguments, because, and I cannot emphasize this enough:&lt;/p>
&lt;h2 id="you-are-going-to-end-up-using-a-public-cloud-even-if-its-more-expensive-and-less-secure-less-reliable-and-less-independent">You are going to end up using a public cloud, even if it’s more expensive and less secure, less reliable and less independent&lt;/h2></description></item><item><title>Bash is a thought pattern</title><link>https://blog.nukemberg.com/post/bash-is-a-thought-pattern/</link><pubDate>Fri, 26 Feb 2016 00:38:42 +0200</pubDate><guid>https://blog.nukemberg.com/post/bash-is-a-thought-pattern/</guid><description>&lt;!-- raw HTML omitted -->
&lt;p>As I became more involved in workshops and training, I observed many people coming from old-school sysadmin backgrounds struggle with the moderns tools and methodologies that the SRE and DevOps movements are promoting. I often wonder why it so hard for some of them to learn the &amp;ldquo;new ways&amp;rdquo;. I&amp;rsquo;ve heard many people comment (often disrespectfully) that these difficulties are due to lack of &amp;ldquo;technical skills&amp;rdquo; - frequently citing poor programming abilities. While I agree this may be a real problem for &lt;em>some&lt;/em> people, this explanation is far from being sufficient.&lt;/p></description></item><item><title>The most important principle of managing a software organization</title><link>https://blog.nukemberg.com/post/sw-dev-managment/</link><pubDate>Sun, 07 Feb 2016 22:46:23 +0200</pubDate><guid>https://blog.nukemberg.com/post/sw-dev-managment/</guid><description>&lt;p>During my years of consulting, I&amp;rsquo;ve run into many managers (in enterprises and startup companies alike) who just didn&amp;rsquo;t get this whole &amp;ldquo;technical debt&amp;rdquo; thing. You&amp;rsquo;ve run into those managers too, I&amp;rsquo;m sure - the kind of manager who issues pressing deadlines, marks bug reports for left-over time (which never comes), relies on VMotion or fancy SAN for high availability, refuses upgrades because of &amp;ldquo;risks&amp;rdquo; and urges you to &amp;ldquo;stop wasting your time listening to tech talks and go write features&amp;rdquo;. I&amp;rsquo;ve even heard managers tell engineers &amp;ldquo;don&amp;rsquo;t waste your time learning this framework, just write your system with it&amp;rdquo; (!!!)&lt;/p>
&lt;p>I&amp;rsquo;ve often wondered - why is it so hard for them to get something that is so painfully obvious to the majority of software engineers?&lt;/p></description></item></channel></rss>